﻿@model List<ResultModel>
@{
ViewBag.Title = "Add Results";
var eval = (EvaluationModel)ViewData["evaluation"];
var pupils = (List<PupilModel>)ViewData["pupils"];
}
<h2>Add Results</h2>
<table class="table">
<thead>
<tr>
<td>Period</td>
<td>Classroom</td>
<td>User</td>
<td>Date</td>
<td>TotalPoint</td>
</tr>
</thead>
<tbody>
<tr>

<td>
@Html.ActionLink(
linkText: eval.periodBegin.ToShortDateString() + " - " + eval.periodEnd.ToShortDateString(),
actionName: "Read",
controllerName: "Period",
routeValues: new
{
id = eval.idPeriod
},
htmlAttributes: new
{
target = "_blank",
}
)
</td>
<td>
@Html.ActionLink(
linkText: eval.classroomTitle,
actionName: "Read",
controllerName: "Classroom",
routeValues: new
{
id = eval.idClassroom
},
htmlAttributes: new
{
target = "_blank",
}
)
</td>
<td>@eval.userName</td>
<td>@eval.date.ToShortDateString()</td>
<td>
@eval.totalPoint
</td>
</tr>
</tbody>
</table>
<br /> <br />


@{Html.BeginForm("AddResults", "Evaluation", FormMethod.Post);}
<table>
<thead>
<tr >
<td>Pupil</td>
<td>Result</td>
</tr>
</thead>
<tbody>
@for (int i = 0; i < pupils.Count; i++)
{
<tr>
@Html.HiddenFor(r => r[i].pupilId, new { Value = pupils[i].id})
@Html.HiddenFor(r => r[i].evaluationId, new { Value = eval.id })
<td>@pupils[i].firstName @pupils[i].lastName</td>
<td>@Html.TextBoxFor(r => r[i].note, new { type="number", min="0", max=eval.totalPoint })</td>
</tr>
}
</tbody>
</table>
<input class="btn btn-primary" type="submit" value="Valider" />
@{Html.EndForm();}